//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp.TaskServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TodoItem", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceApp.Models")]
    [System.SerializableAttribute()]
    public partial class TodoItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateModified {
            get {
                return this.DateModifiedField;
            }
            set {
                if ((this.DateModifiedField.Equals(value) != true)) {
                    this.DateModifiedField = value;
                    this.RaisePropertyChanged("DateModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TaskServiceReference.ITaskService")]
    public interface ITaskService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetAllTodoItems", ReplyAction="http://tempuri.org/ITaskService/GetAllTodoItemsResponse")]
        System.Collections.Generic.List<WebApp.TaskServiceReference.TodoItem> GetAllTodoItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetAllTodoItems", ReplyAction="http://tempuri.org/ITaskService/GetAllTodoItemsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.TaskServiceReference.TodoItem>> GetAllTodoItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetUserTodoItems", ReplyAction="http://tempuri.org/ITaskService/GetUserTodoItemsResponse")]
        System.Collections.Generic.List<WebApp.TaskServiceReference.TodoItem> GetUserTodoItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetUserTodoItems", ReplyAction="http://tempuri.org/ITaskService/GetUserTodoItemsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.TaskServiceReference.TodoItem>> GetUserTodoItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/AddTodoItem", ReplyAction="http://tempuri.org/ITaskService/AddTodoItemResponse")]
        WebApp.TaskServiceReference.TodoItem AddTodoItem(WebApp.TaskServiceReference.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/AddTodoItem", ReplyAction="http://tempuri.org/ITaskService/AddTodoItemResponse")]
        System.Threading.Tasks.Task<WebApp.TaskServiceReference.TodoItem> AddTodoItemAsync(WebApp.TaskServiceReference.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/DeleteTodoItem", ReplyAction="http://tempuri.org/ITaskService/DeleteTodoItemResponse")]
        bool DeleteTodoItem(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/DeleteTodoItem", ReplyAction="http://tempuri.org/ITaskService/DeleteTodoItemResponse")]
        System.Threading.Tasks.Task<bool> DeleteTodoItemAsync(int itemId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITaskServiceChannel : WebApp.TaskServiceReference.ITaskService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TaskServiceClient : System.ServiceModel.ClientBase<WebApp.TaskServiceReference.ITaskService>, WebApp.TaskServiceReference.ITaskService {
        
        public TaskServiceClient() {
        }
        
        public TaskServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TaskServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<WebApp.TaskServiceReference.TodoItem> GetAllTodoItems() {
            return base.Channel.GetAllTodoItems();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.TaskServiceReference.TodoItem>> GetAllTodoItemsAsync() {
            return base.Channel.GetAllTodoItemsAsync();
        }
        
        public System.Collections.Generic.List<WebApp.TaskServiceReference.TodoItem> GetUserTodoItems() {
            return base.Channel.GetUserTodoItems();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebApp.TaskServiceReference.TodoItem>> GetUserTodoItemsAsync() {
            return base.Channel.GetUserTodoItemsAsync();
        }
        
        public WebApp.TaskServiceReference.TodoItem AddTodoItem(WebApp.TaskServiceReference.TodoItem item) {
            return base.Channel.AddTodoItem(item);
        }
        
        public System.Threading.Tasks.Task<WebApp.TaskServiceReference.TodoItem> AddTodoItemAsync(WebApp.TaskServiceReference.TodoItem item) {
            return base.Channel.AddTodoItemAsync(item);
        }
        
        public bool DeleteTodoItem(int itemId) {
            return base.Channel.DeleteTodoItem(itemId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTodoItemAsync(int itemId) {
            return base.Channel.DeleteTodoItemAsync(itemId);
        }
    }
}
